#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "Menu.h"
#include "Menu_Clockface.h"
#include "State.h"
#include "Clockface.h"
#include "Clockface_Pacman.h"

#define LEDL 13
#define LEDR 6

#define OLED_DC     A3
#define OLED_CS     A5
#define OLED_RESET  A4
#define WIDTH      128
#define HEIGHT     64

Adafruit_SSD1306 display(OLED_DC, OLED_RESET, OLED_CS);

State state;
Menu* menu = NULL;

const unsigned char PROGMEM watch [] = {
0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00,
0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x03,
0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x07, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x70, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x33, 0xFF, 0xFF,
0xCC, 0x00, 0x00, 0x33, 0xFF, 0xFF, 0xCC, 0x00, 0x01, 0xF3, 0x00, 0x00, 0xCC, 0x00, 0x01, 0xF3,
0x00, 0x00, 0xCC, 0x00, 0x00, 0x33, 0x00, 0x00, 0xCF, 0x80, 0x00, 0x33, 0x00, 0x00, 0xCF, 0x80,
0x00, 0x33, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x33, 0x00, 0x00, 0xCC, 0x00, 0x01, 0xF3, 0x00, 0x00,
0xCC, 0x00, 0x01, 0xF3, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x33, 0xFF, 0xFF, 0xCC, 0x00, 0x00, 0x33,
0xFF, 0xFF, 0xCC, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x38, 0x00,
0x00, 0x0E, 0x00, 0x00, 0x70, 0x00, 0x00, 0x07, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x03, 0xFF, 0xFF,
0xC0, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE,
0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00
};

const unsigned char PROGMEM boy [] = {
0x00, 0x01, 0xF0, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x78, 0x06, 0x00, 0x00, 0xC0, 0x03, 0x00,
0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00,
0x00, 0x80, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x03, 0x00, 0x01, 0x80, 0x03, 0x00, 0x00, 0x80,
0x03, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x01, 0x80, 0x03, 0x80, 0x00, 0xC0, 0x02, 0x00,
0x00, 0x40, 0x06, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x20, 0x0C, 0x00,
0x00, 0x30, 0x18, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x08, 0x30, 0x00,
0x00, 0xF8, 0x3F, 0x80, 0x03, 0xC0, 0x01, 0xE0, 0x06, 0x00, 0x00, 0x30, 0x08, 0x00, 0x00, 0x10,
0x18, 0x00, 0x00, 0x18, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08
};

const unsigned char PROGMEM girl [] = {
0x00, 0x07, 0xE0, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00, 0x40, 0x03, 0x00,
0x00, 0x80, 0x01, 0x80, 0x01, 0x80, 0x30, 0xC0, 0x01, 0x07, 0xF8, 0x40, 0x01, 0x1E, 0x08, 0x40,
0x01, 0x30, 0x0C, 0x60, 0x03, 0x20, 0x04, 0x60, 0x03, 0x60, 0x04, 0x60, 0x03, 0x40, 0x06, 0x20,
0x03, 0x40, 0x02, 0x20, 0x02, 0x40, 0x02, 0x20, 0x03, 0x40, 0x02, 0x20, 0x03, 0x40, 0x02, 0x20,
0x03, 0x40, 0x02, 0x20, 0x03, 0x40, 0x06, 0x20, 0x03, 0x60, 0x06, 0x20, 0x03, 0x70, 0x0E, 0x20,
0x01, 0x70, 0x1C, 0x20, 0x01, 0x3C, 0x3C, 0x20, 0x01, 0x2F, 0xFC, 0x20, 0x01, 0x38, 0x18, 0x20,
0x03, 0xF8, 0x1F, 0xE0, 0x07, 0x80, 0x01, 0xE0, 0x0C, 0x00, 0x00, 0x30, 0x18, 0x00, 0x00, 0x18,
0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08
};

const unsigned char PROGMEM gamepad [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x7F, 0xF0,
0x08, 0x04, 0x20, 0x10, 0x08, 0x0C, 0x20, 0x10, 0x08, 0x0C, 0x20, 0x10, 0x08, 0x07, 0xE0, 0x10,
0x38, 0x03, 0xC0, 0x14, 0x78, 0x00, 0x00, 0x1E, 0xC0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x01,
0x80, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x03, 0x78, 0x00, 0x00, 0x1E, 0x38, 0x03, 0x80, 0x14,
0x08, 0x07, 0xE0, 0x10, 0x08, 0x0C, 0x20, 0x10, 0x08, 0x0C, 0x20, 0x10, 0x08, 0x04, 0x20, 0x10,
0x0F, 0xFC, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup(void) {
  Serial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.display();
  delay(4000);

  display.clearDisplay();  
  display.setTextSize(2);
  display.setTextColor(WHITE);
  for (int i=32; i<=35; i++)
  {
  display.setCursor(i, 25);
  display.print(F("Hello"));
  display.display();
  delay(1000);
  }
  display.clearDisplay();
 display.setTextSize(1);
  display.setCursor(20, 15);
  display.print(F("I'm your"));
  display.setCursor(30, 35);
  display.print(F("watchX"));
  display.drawBitmap(80,5,watch,48,48,1);
  display.display();
  delay(5000);
  display.clearDisplay();
  
  display.setTextSize(1);
  display.setCursor(0, 15);
  display.print(F("There are a few steps"));
  display.setCursor(0, 25);
  display.print(F("to complete the setup"));
  display.display();
  delay(1000);
  display.clearDisplay();
  
  display.setCursor(0, 20);
  display.print(F("Boy or Girl?"));
  display.drawBitmap(100,10,boy,32,32,1);
  display.drawBitmap(70,10,girl,32,32,1);
  display.display();
  delay(5000);
  display.clearDisplay();
  
  display.setCursor(0, 20);
  display.print(F("MPU6050 GAME"));
  display.drawBitmap(50,25,gamepad,32,32,1);
  display.display();
  delay(5000);
  display.clearDisplay();

  // Load things from state
  display.dim(state.dim);

  state.update();
  switchMenu(MENU_CLOCK);
}

void loop() {

  bool draw = false;

  updateMenuSelection();

  // Update
  state.update();
  if(menu->update()) {
    draw = true;
  }

  // Display
  if (draw) {
    display.clearDisplay();
    menu->draw(&display);
    display.display();
  }
}
